#include <Windows.h>
/* 窗口类的窗口过程函数(负责消息处理) */
LRESULT CALLBACK MyWndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
    /* 通过 GetWindowLongPtr 获取偏移为 0 和 8 的两个 long long 的值 */
    LONG_PTR A = GetWindowLongPtr(hWnd, 0);
    LONG_PTR B = GetWindowLongPtr(hWnd, 8);
    wchar_t* content = new wchar_t[20];
    switch (message)
    {
    case WM_LBUTTONDOWN:  // 左键按下时，输出 A 的值
        wsprintf(content, L"%p", A);
        MessageBox(hWnd, content, L"Left Button Down", MB_OK);
        break;
    case WM_RBUTTONDOWN:  // 右键按下时，输出 B 的值
        wsprintf(content, L"%p", B);
        MessageBox(hWnd, content, L"Right Button Down", MB_OK);
        break;
    default:
        return DefWindowProc(hWnd, message, wParam, lParam);
    }
    return 0;
}
/* 程序入口点 */
int APIENTRY wWinMain(_In_ HINSTANCE hInstance,
    _In_opt_ HINSTANCE hPrevInstance,
    _In_ LPWSTR    lpCmdLine,
    _In_ int       nCmdShow)
{
    HWND hwnd;
    MSG msg;
    WNDCLASSEX wndclass = { 0 };
    wndclass.cbSize = sizeof(WNDCLASSEX);
    wndclass.style = CS_HREDRAW | CS_VREDRAW;
    wndclass.lpfnWndProc = MyWndProc;
    wndclass.hInstance = hInstance;
    wndclass.lpszClassName = L"TestWndClass";
    /* 使用 cbWndExtra 字段，设置扩展内存大小为两个 long long */
    wndclass.cbWndExtra = 2 * sizeof(long long);
    RegisterClassEx(&wndclass);
    hwnd = CreateWindowEx(
        NULL, L"TestWndClass", L"Hello World",
        WS_OVERLAPPEDWINDOW | WS_VISIBLE,
        CW_USEDEFAULT, CW_USEDEFAULT,
        CW_USEDEFAULT, CW_USEDEFAULT,
        NULL, NULL, hInstance, NULL
    );
    /* 通过 SetWindowLongPtr 设置偏移为 0 和 8 的两个 long long 的值 */
    SetWindowLongPtr(hwnd, 0, 0xAAAAAAAAAAAAAAAA);
    SetWindowLongPtr(hwnd, 8, 0xBBBBBBBBBBBBBBBB);
    while (GetMessage(&msg, hwnd, NULL, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return msg.wParam;
}


